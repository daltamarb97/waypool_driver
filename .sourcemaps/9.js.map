{"version":3,"sources":["../../src/pages/signup/signup.module.ts","../../src/pages/signup/signup.ts"],"names":[],"mappings":"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","file":"9.js","sourcesContent":["\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { SignupPage } from './signup';\n \n@NgModule({\n  declarations: [\n    SignupPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(SignupPage),\n  ],\n  exports: [\n    SignupPage\n  ]\n})\nexport class SignupPageModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/signup/signup.module.ts","\nimport { Component, ViewChild } from '@angular/core';\n\n\nimport { NavController, NavParams, IonicPage, App } from 'ionic-angular';\nimport { LoginPage } from '../login/login';\n// import { VerificationPage } from '../verification/verification';\n\n// import { AngularFireDatabase } from '@angular/fire/database';\nimport { FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { authenticationService } from '../../services/driverauthentication.service';\nimport { SignUpService } from '../../services/signup.service';\nimport { AlertController } from 'ionic-angular';\nimport { Content } from 'ionic-angular';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { WindowService } from '../../services/window.service';\n// import * as firebase from 'firebase';\nimport * as firebase from 'firebase';\nimport { Subject } from 'rxjs';\nimport { AngularFireDatabase } from 'angularfire2/database';\n\ndeclare var google;\n@IonicPage()\n@Component({\n  selector: 'page-signup',\n  templateUrl: 'signup.html'\n})\n\nexport class SignupPage {\n\n    @ViewChild(Content) content: Content;\n    user:any ={};\n    car:any={};\n    tokenId:any = '';\n    userId:any = '';\n    isReadonly = true;\n    private signupGroup: FormGroup;\n\n    //variables linked among them \n    cityVar:any;\n    cities = [];\n    showReadonly:boolean = true;\n    // onlyEmail:any;\n    arrayEmails = [];\n    company:any;\n    windowRef:any;\n    verificationCode:string;\n    unsubscribe = new Subject;\n    email:any;\n    geocoder: any\n    emailStringVerification:any;\n    rightEmailOnDatabase:any;\n    zone:any;\n    zones = [];\n    userPlace:any;\n    multipleZones:boolean = false;\n    forLoopsCompleted:any = 0;\n    companyIdentified:boolean = false;\n\n  constructor(public navCtrl: NavController, private formBuilder: FormBuilder, private authenticationService: authenticationService, private SignUpService: SignUpService, public  alertCtrl: AlertController, private AngularFireAuth: AngularFireAuth, public navParams: NavParams, public windowService: WindowService, private app: App, private afDB: AngularFireDatabase) {\n    this.signupGroup = this.formBuilder.group({\n        name: [\"\", Validators.required],\n        lastname: [\"\", Validators.required],\n        email: [\"\", Validators.required],\n        fixedemail: [\"\", Validators],\n        password: [\"\", Validators.required],\n        passwordconf: [\"\", Validators.required],\n        phone: [\"\", Validators.required],\n        carModel: [\"\", Validators.required],\n        plateNumber: [\"\", Validators.required],\n        color: [\"\", Validators.required],\n        city: [\"\", Validators.required],\n        isChecked:[true, Validators.required]\n    })\n\n    this.geocoder = new google.maps.Geocoder;\n\n\n    // this.SignUpService.pushEmails('uninorte', '@uninorte.edu.co');\n    // this.SignUpService.pushEmails('uninorte', '@jhggh.edu.co');\n\n    this.SignUpService.getAllCities().takeUntil(this.unsubscribe)\n    .subscribe(cities => {\n        this.cities = cities;\n        console.log(this.cities);\n        \n    })\n\n  }\n\n  \n\n  onChange(){\n    this.arrayEmails = [];\n    this.afDB.database.ref('allCities/' + this.cityVar + '/allPlaces').once('value').then((snap)=>{\n        let obj = snap.val();\n\n        Object.getOwnPropertyNames(obj).forEach((key)=>{\n            this.arrayEmails.push(obj[key].email);\n            console.log(this.arrayEmails);\n            \n            \n        })\n    })  \n}\n\nnoCompanyIdentified(numberToExecute){\n    ++this.forLoopsCompleted;\n    if(this.forLoopsCompleted === numberToExecute){\n        if(this.companyIdentified === false){\n            console.log('no hay empresa para este correo');\n            \n        }\n        \n    }\n}\n\n\n    scrolling(){\n        this.content.scrollTo(30, 0);\n    };\n\n\n    login(){\n        this.app.getRootNav().push('LoginPage');\n    }\n     \n    verification(){\n        // this.forLoopsCompleted = 0;\n        var count = this.arrayEmails.length;\n        for(var i=0; i<count; i++){\n\n            this.emailStringVerification = this.email.indexOf(this.arrayEmails[i]);\n            console.log(this.emailStringVerification);\n            this.noCompanyIdentified(count);\n\n            if(this.emailStringVerification > -1){\n                this.companyIdentified = true;\n                this.rightEmailOnDatabase = this.arrayEmails[i];\n                this.afDB.database.ref('allCities/' + this.cityVar + '/allPlaces').once('value').then((snap)=>{\n                    let obj = snap.val();\n                    Object.getOwnPropertyNames(obj).forEach((key)=>{ \n                        if(obj[key].email === this.rightEmailOnDatabase){\n                            console.log(`la empresa es ${obj[key].name}`);  \n                            this.company = obj[key].name;\n\n                            if(obj[key].zones.length === 1){\n                                this.zones = [];\n                                this.zone = obj[key].zones[0];                                \n                            }else{\n                                this.zone = undefined;\n                                obj[key].zones.forEach(zone => {\n                                    this.zones.push(zone);\n                                });                                  \n                            }\n                            \n                            \n                        }else{\n                        }\n                    })\n                })\n                \n            }else{\n            }         \n        }\n\n        \n    //   if(!this.signupGroup.controls['isChecked'].value === true ){\n\n    //     const alert = this.alertCtrl.create({\n    //         title: 'No aceptaste nuestros términos y condiciones',\n    //         subTitle: 'Debes estar de acuerdo con nustros términos y condiciones para usar Waypool',\n    //         buttons: ['OK']\n    //       });\n    //       alert.present(); \n\n    //     }else{\n    //         let userName = this.signupGroup.controls['name'].value;\n    //         let userLastName = this.signupGroup.controls['lastname'].value;\n    //         let userPhone = this.signupGroup.controls['phone'].value;\n    //         let userEmail = this.signupGroup.controls['email'].value \n    //         let userPassword = this.signupGroup.controls['password'].value;\n    //         // let userPasswordconf = this.signupGroup.controls['passwordconf'].value;\n    //         let userCarModel = this.signupGroup.controls['carModel'].value;\n    //         let userPlateNumber = this.signupGroup.controls['plateNumber'].value;\n    //         let usercarColor = this.signupGroup.controls['color'].value;\n    //         if(this.zones === []){\n    //             this.userPlace = this.zone;\n    //             this.multipleZones = false;\n    //         }else{\n    //             this.multipleZones = true;\n    //         }\n\n    //       this.car = {\n    //         carModel: userCarModel,\n    //         plateNumber:userPlateNumber,\n    //         color:usercarColor\n    //       }\n\n    //       // saving data in variable\n          \n    //         this.user = {\n    //             name: userName,\n    //             lastname: userLastName,\n    //             email: userEmail,\n    //             phone: '+57'+userPhone,\n    //             place: this.userPlace,\n    //             createdBy: 'driver',\n    //             company: this.company\n    //         };\n\n    //     this.SignUpService.userPlace = this.userPlace;\n        \n    //       if(this.signupGroup.controls['password'].value === this.signupGroup.controls['passwordconf'].value){\n    //         this.authenticationService.registerWithEmail(userEmail, userPassword).then(() =>{\n    //             if(!this.user.userId){\n    //                 this.AngularFireAuth.auth.onAuthStateChanged((user)=>{\n    //                     if(user){\n    //                                user.getIdToken().then((token)=>{\n    //                                this.user.tokenId = token;\n    \n    //                             })\n    //                          if(!this.user.userId){\n    //                             this.user.userId = user.uid;\n    //                         }\n\n    //                         if(this.multipleZones === false){\n    //                             this.SignUpService.saveUser(this.SignUpService.userPlace, this.user);\n    //                         }else{\n    //                             this.zones.forEach(zone => {\n    //                                 this.SignUpService.saveUser(zone, this.user);\n    //                             })\n    //                         }\n                           \n    //                         this.afDB.database.ref('allPlaces/' + this.SignUpService.userPlace + '/location').once('value').then((snap)=>{\n    //                             console.log(snap.val());\n    //                             console.log(snap.val().lng);\n                                \n    //                             this.SignUpService.setFixedLocationCoordinates(this.SignUpService.userPlace, this.user.userId, snap.val().lat, snap.val().lng )\n    //                             this.geocodingPlace(snap.val().lat, snap.val().lng, this.SignUpService.userPlace, this.user.userId);\n    //                         })\n    //                         this.SignUpService.saveUserInAllUsers(this.SignUpService.userPlace, this.user.userId);\n    //                         this.SignUpService.addCarProfile(this.SignUpService.userPlace, this.user.userId,this.car);\n                            \n                            \n    //                         //send text message with code\n    //                         // this.sendVerificationCode(this.user.userId);\n    //                         // this.app.getRootNav().push('LoginPage');\n\n\n    //                     }else{\n    //                         console.log('there is no user');\n    //                     }\n    //                 })\n    //             };\n    \n    //             //sending email verification and verifying weather email is verified or not\n    //             this.AngularFireAuth.auth.onAuthStateChanged((user)=>{\n    //                 if(user){\n    //                     if(user.emailVerified == false){\n    //                         user.sendEmailVerification();\n    //                         const alert = this.alertCtrl.create({\n    //                             title: '¡REGISTRO EXITOSO!',\n    //                             subTitle: 'En los próximos minutos te enviaremos un link de verificación a tu email',\n    //                             buttons: [\n    //                                 {\n    //                                     text: 'OK',\n    //                                     handler: () => {\n    //                                         this.app.getRootNav().push('CarRegistrationLoginPage');\n    //                                     }\n    //                                   }\n    //                             ]\n    //                         });\n    //                         alert.present();\n    //                     console.log(\"verification email has been sent\");\n    //                     }else{\n    //                         console.log(\"verification email has not been sent or the email is already verified\");\n    //                     }\n    //                 }else{\n    //                     console.log('there is no user');\n    //                 }\n    //             }) \n    //         }).catch((error)=>{\n    //             if(error.code === \"auth/email-already-in-use\"){\n    //                 const alert = this.alertCtrl.create({\n    //                     title: 'ya existe una cuenta con este correo',\n    //                     subTitle: 'Si ya te registraste en WAYPOOL, sólo debes iniciar sesión con los datos con los que te registraste. También puedes estar registrandote con un correo ya existente',\n    //                     buttons: ['OK']\n    //                   });\n    //                   alert.present(); \n    //             }\n    //         })\n    //         // this.navCtrl.push('LoginPage', this.user);\n               \n    //     }else{\n    //         const alert = this.alertCtrl.create({\n    //             title: 'Oops!',\n    //             subTitle: 'las contraseñas no coinciden, intenta de nuevo',\n    //             buttons: ['OK']\n    //           });\n    //           alert.present();\n    //     }     \n    // }\n }\n\n    sendVerificationCode(userId){\n            this.navCtrl.push('VerificationNumberPage', {userId: userId});\n    }\n\n   \n\n    geocodingPlace(lat, lng, place, userId) {\n\n        this.geocoder.geocode({'location': {lat, lng}}, (results, status) => {\n          if (status === 'OK') {\n            if (results[0]) {\n               let namePlace =[results[0].formatted_address];\n               this.SignUpService.setFixedLocationName(place, userId, namePlace[0]);\n            } else {\n             alert('No results found');\n            }\n          } else {\n            alert('Geocoder failed due to: ' + status);\n          }\n                      \n      \n        });\n      }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/signup/signup.ts"],"sourceRoot":""}