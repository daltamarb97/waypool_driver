{"version":3,"sources":["../../src/pages/confirmprice/confirmprice.module.ts","../../src/pages/confirmprice/confirmprice.ts"],"names":[],"mappings":"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","file":"24.js","sourcesContent":["\r\nimport { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { ConfirmpricePage } from './confirmprice';\r\n \r\n@NgModule({\r\n  declarations: [\r\n    ConfirmpricePage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(ConfirmpricePage),\r\n  ],\r\n  exports: [\r\n    ConfirmpricePage\r\n  ]\r\n})\r\nexport class ConfirmpricePageModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/confirmprice/confirmprice.module.ts","import { Component, ViewChild } from '@angular/core';\r\nimport { NavController, ViewController, ModalController, NavParams, Tabs, AlertController, App, IonicPage } from 'ionic-angular';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport { AngularFireDatabase } from 'angularfire2/database';\r\nimport { SignUpService } from '../../services/signup.service';\r\nimport { sendCoordsService } from '../../services/sendCoords.service';\r\n\r\nimport { sendUsersService } from '../../services/sendUsers.service';\r\nimport { priceService } from '../../services/price.service';\r\nimport { geofireService } from '../../services/geofire.services';\r\nimport { Subscription, Subject, Subscriber } from 'rxjs';\r\nimport * as moment from 'moment';\r\nimport { MetricsService } from '../../services/metrics.service';\r\n\r\n\r\ndeclare var google;\r\n@IonicPage()\r\n\r\n@Component({\r\n  selector: 'page-confirmprice',\r\n  templateUrl: 'confirmprice.html'\r\n})\r\nexport class ConfirmpricePage {\r\n  \r\n  accepted: boolean;\r\n\r\n  precio:string;\r\n  userDriverUid=this.AngularFireAuth.auth.currentUser.uid\r\n  //variable for get data in function\r\n  driver:any ={};\r\n  // variable to get data on constructor\r\n  driver2:any;\r\n  //variable to transfer data from driver to this one\r\n  driverInfo:any ={};\r\n  driverInfoNote:any ={};\r\n  lat;\r\n  lng;\r\n\r\n  geoInfo1;\r\n  geoInfo2;\r\n  location;\r\n  buttonColor:string = '#0fc874';\r\n  buttonColor2:string = '#0fc874';\r\n  unsubscribe = new Subject;\r\n  carModelList:any=[];\r\n  car:string;\r\n\r\n  hour:any;\r\n  nowHour:any = new Date();\r\n  hourToSend:any;\r\n\r\n   //geocoder variable\r\n   geocoder: any\r\n   geocoordinatesDest:any ={};\r\n   geocoordinatesOr:any ={};\r\n   destination:any;\r\n   origin:any;\r\n   destinationNote:any;\r\n   originNote:any;\r\n\r\n   // variables for reserve\r\n   goefireKey:any;\r\n   typeOfReserve:any;\r\n   reserve:any;\r\n   startHour:any;\r\n   reservesAlreadyCreated:any;\r\n   houseAddress:any;\r\n   placeAddress:any;\r\n   schedules = [];\r\n  constructor(public navCtrl: NavController, public appCtrl: App, private MetricsService:MetricsService , public PriceService:priceService,public alertCtrl: AlertController,private afDB: AngularFireDatabase,public sendUsersService: sendUsersService, public SignUpService: SignUpService, public sendCoordsService: sendCoordsService,public modalCtrl: ModalController, private AngularFireAuth: AngularFireAuth, public viewCtrl:ViewController,public navParams: NavParams, private geofireService: geofireService) {\r\n    //hay dos variables, driver y driver2 lo cual significa que debo llamar a la info del driver en dos ocasiones distintas, cuando hay nota y cuando no\r\n    this.SignUpService.getCar( this.SignUpService.userPlace , this.userDriverUid).takeUntil(this.unsubscribe)\r\n    .subscribe( car => {\r\n      //get cars registered\r\n      this.carModelList = car;\r\n      console.log(this.carModelList)\r\n    });\r\n\r\n\r\n  \r\n    \r\n\r\n\r\n\r\n    this.SignUpService.getMyInfo(this.SignUpService.userPlace , this.userDriverUid).takeUntil(this.unsubscribe).subscribe(driver=>{\r\n      this.driver = driver;\r\n  console.log(this.driver);\r\n  \r\n      this.driverInfo.houseAddr = this.driver.houseAddress.name\r\n      this.driverInfo.placeAddr = this.driver.fixedLocation.name\r\n      this.driverInfo.name = this.driver.name\r\n      this.driverInfo.lastname = this.driver.lastname\r\n      this.driverInfo.phone = this.driver.phone\r\n      this.driverInfo.userId = this.driver.userId\r\n      this.driverInfo.verifiedPerson = this.driver.verifiedPerson\r\n      this.driverInfo.place = this.driver.place\r\n\r\n      console.log('got info here');\r\n })\r\n \r\n\r\n\r\n    \r\n    this.geocoder = new google.maps.Geocoder;\r\n  }\r\n\r\n  ionViewDidEnter(){\r\n     this.geofireService.cancelGeoqueryPlace();\r\n    }\r\n  \r\n   \r\n\r\n    setPriceDriver(){\r\n      if(this.precio == null || this.precio == '' || this.car == null || this.car==''){\r\n                const alert = this.alertCtrl.create({\r\n                    title: 'Informacion Incompleta',\r\n                    subTitle: 'No haz colocado el precio por el que estas dispuesto a compatir tu viaje o no haz especificado en que carro te moverás',\r\n                    buttons: ['OK']\r\n                  });\r\n                  alert.present();\r\n            }else{\r\n              this.PriceService.setPrice(this.SignUpService.userPlace, this.userDriverUid,this.precio,this.car);\r\n              this.afDB.list(this.SignUpService.userPlace + '/drivers/' + this.userDriverUid + '/schedule/').valueChanges().subscribe((schedules)=>{\r\n                this.schedules = schedules;\r\n                this.schedules.forEach(sche => {\r\n                  if(sche.type === 'origin'){\r\n                    this.afDB.database.ref(this.SignUpService.userPlace + '/reserves/'+ this.userDriverUid).push({\r\n                      driver: this.driverInfo,\r\n                      car:this.car,\r\n                      houseAddr: this.driver.houseAddress.name,\r\n                      placeAddr: this.driverInfo.placeAddr,\r\n                      price:this.precio,\r\n                      startHour: sche.hour,\r\n                      type: sche.type,\r\n              \r\n                  }).then((snap)=>{\r\n                    const key = snap.key;\r\n                    // this.MetricsService.createdReserves(this.SignUpService.userPlace,this.driverInfo,this.car,this.navParams.data.houseAddr[0],this.navParams.data.placeAddr,this.precio, sche.,this.typeOfReserve);\r\n            \r\n                   // set geofireOrkey \r\n                   this.geofireService.setGeofireOrNEWTEST(this.SignUpService.userPlace, key, this.driver.houseAddress.coordinates.lat, this.driver.houseAddress.coordinates.lng );\r\n                   this.afDB.database.ref(this.SignUpService.userPlace + '/geofireOr/' + key).update({\r\n                      driverId: this.driverInfo.userId\r\n                   })\r\n                   console.log('executed geofire Or')\r\n                  \r\n              \r\n              \r\n                      this.afDB.database.ref(this.SignUpService.userPlace + '/reserves/'+ this.userDriverUid + '/' + key).update({\r\n                          keyTrip: key \r\n                      }) \r\n\r\n                      this.accepted = true;\r\n                      this.unsubscribe.next();\r\n                      this.unsubscribe.complete();\r\n                      this.viewCtrl.dismiss(this.accepted);\r\n\r\n                  })\r\n                  }else{\r\n                    this.afDB.database.ref(this.SignUpService.userPlace + '/reserves/'+ this.userDriverUid).push({\r\n                      driver: this.driverInfo,\r\n                      car:this.driver.trips.car,\r\n                      houseAddr: this.driver.houseAddress.name,\r\n                      placeAddr: this.driverInfo.placeAddr,\r\n                      price:this.precio,\r\n                      startHour: sche.hour,\r\n                      type: sche.type,\r\n              \r\n                  }).then((snap)=>{\r\n                    const key = snap.key;\r\n                    // this.MetricsService.createdReserves(this.SignUpService.userPlace,this.driverInfo,this.car,this.navParams.data.houseAddr[0],this.navParams.data.placeAddr,this.precio, sche.,this.typeOfReserve);\r\n            \r\n                   // set geofireOrkey \r\n                   this.geofireService.setGeofireDestNEWTEST(this.SignUpService.userPlace, key, this.driver.houseAddress.coordinates.lat, this.driver.houseAddress.coordinates.lng );\r\n                   this.afDB.database.ref(this.SignUpService.userPlace + '/geofireDest/' + key).update({\r\n                      driverId: this.driverInfo.userId\r\n                   })\r\n                   console.log('executed geofire Dest')\r\n                  \r\n              \r\n              \r\n                      this.afDB.database.ref(this.SignUpService.userPlace + '/reserves/'+ this.userDriverUid + '/' + key).update({\r\n                          keyTrip: key \r\n                      }) \r\n                      this.accepted = true;\r\n                      this.unsubscribe.next();\r\n                      this.unsubscribe.complete();\r\n                      this.viewCtrl.dismiss(this.accepted);\r\n\r\n                  })                    \r\n                  }\r\n                 \r\n                });\r\n              })\r\n\r\n            }\r\n\r\n     \r\n}; \r\n        \r\n  dismiss() {\r\n     // this.unsubscribe.next();\r\n    // this.unsubscribe.unsubscribe();\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  \r\n    this.viewCtrl.dismiss();\r\n\r\n  }  \r\n\r\n  // ionViewDidLeave(){\r\n  //   this.unsubscribe.next();\r\n  //   this.unsubscribe.complete();\r\n  // }\r\n \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/confirmprice/confirmprice.ts"],"sourceRoot":""}