{"version":3,"sources":["../../src/pages/confirmprice/confirmprice.module.ts","../../src/pages/confirmprice/confirmprice.ts"],"names":[],"mappings":"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","file":"24.js","sourcesContent":["\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ConfirmpricePage } from './confirmprice';\n \n@NgModule({\n  declarations: [\n    ConfirmpricePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ConfirmpricePage),\n  ],\n  exports: [\n    ConfirmpricePage\n  ]\n})\nexport class ConfirmpricePageModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/confirmprice/confirmprice.module.ts","import { Component, ViewChild } from '@angular/core';\nimport { NavController, ViewController, ModalController, NavParams, Tabs, AlertController, App, IonicPage } from 'ionic-angular';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport { SignUpService } from '../../services/signup.service';\nimport { sendCoordsService } from '../../services/sendCoords.service';\n\nimport { sendUsersService } from '../../services/sendUsers.service';\nimport { priceService } from '../../services/price.service';\nimport { geofireService } from '../../services/geofire.services';\nimport { Subscription, Subject, Subscriber } from 'rxjs';\nimport * as moment from 'moment';\nimport { MetricsService } from '../../services/metrics.service';\n\n\ndeclare var google;\n@IonicPage()\n\n@Component({\n  selector: 'page-confirmprice',\n  templateUrl: 'confirmprice.html'\n})\nexport class ConfirmpricePage {\n  \n  accepted: boolean;\n\n  precio:string;\n  userDriverUid=this.AngularFireAuth.auth.currentUser.uid\n  //variable for get data in function\n  driver:any ={};\n  // variable to get data on constructor\n  driver2:any;\n  //variable to transfer data from driver to this one\n  driverInfo:any ={};\n  driverInfoNote:any ={};\n  lat;\n  lng;\n\n  geoInfo1;\n  geoInfo2;\n  location;\n  buttonColor:string = '#0fc874';\n  buttonColor2:string = '#0fc874';\n  unsubscribe = new Subject;\n  carModelList:any=[];\n  car:string;\n\n  hour:any;\n  nowHour:any = new Date();\n  hourToSend:any;\n\n   //geocoder variable\n   geocoder: any\n   geocoordinatesDest:any ={};\n   geocoordinatesOr:any ={};\n   destination:any;\n   origin:any;\n   destinationNote:any;\n   originNote:any;\n\n   // variables for reserve\n   goefireKey:any;\n   typeOfReserve:any;\n   reserve:any;\n   startHour:any;\n   reservesAlreadyCreated:any;\n   houseAddress:any;\n   placeAddress:any;\n   schedules = [];\n  constructor(public navCtrl: NavController, public appCtrl: App, private MetricsService:MetricsService , public PriceService:priceService,public alertCtrl: AlertController,private afDB: AngularFireDatabase,public sendUsersService: sendUsersService, public SignUpService: SignUpService, public sendCoordsService: sendCoordsService,public modalCtrl: ModalController, private AngularFireAuth: AngularFireAuth, public viewCtrl:ViewController,public navParams: NavParams, private geofireService: geofireService) {\n\n\n    // this.afDB.database.ref(this.SignUpService.userPlace + '/reserves/' + this.userDriverUid).once('value').then((snap)=>{\n    //   console.log(snap.val());\n\n    //   let obj = snap.val();\n\n    //   Object.getOwnPropertyNames(obj).forEach(key => {\n    //    console.log(obj[key]);\n        \n    //   });\n      \n    // })\n    //hay dos variables, driver y driver2 lo cual significa que debo llamar a la info del driver en dos ocasiones distintas, cuando hay nota y cuando no\n    this.SignUpService.getCar( this.SignUpService.userPlace , this.userDriverUid).takeUntil(this.unsubscribe)\n    .subscribe( car => {\n      //get cars registered\n      this.carModelList = car;\n      console.log(this.carModelList)\n    });\n\n\n  \n    \n\n\n\n    this.SignUpService.getMyInfo(this.SignUpService.userPlace , this.userDriverUid).takeUntil(this.unsubscribe).subscribe(driver=>{\n      this.driver = driver;\n  console.log(this.driver);\n  \n      this.driverInfo.houseAddr = this.driver.houseAddress.name\n      this.driverInfo.placeAddr = this.driver.fixedLocation.name\n      this.driverInfo.name = this.driver.name\n      this.driverInfo.lastname = this.driver.lastname\n      this.driverInfo.phone = this.driver.phone\n      this.driverInfo.userId = this.driver.userId\n      this.driverInfo.verifiedPerson = this.driver.verifiedPerson\n      this.driverInfo.place = this.driver.place\n\n      console.log('got info here');\n })\n \n\n\n    \n    this.geocoder = new google.maps.Geocoder;\n  }\n\n  ionViewDidEnter(){\n     this.geofireService.cancelGeoqueryPlace();\n    }\n  \n   \n\n    setPriceDriver(){\n      if(this.precio == null || this.precio == '' || this.car == null || this.car==''){\n                const alert = this.alertCtrl.create({\n                    title: 'Informacion Incompleta',\n                    subTitle: 'No haz colocado el precio por el que estas dispuesto a compatir tu viaje o no haz especificado en que carro te moverás',\n                    buttons: ['OK']\n                  });\n                  alert.present();\n            }else{\n              this.PriceService.setPrice(this.SignUpService.userPlace, this.userDriverUid,this.precio,this.car);\n\n              // HERE YOU ARE, DOUCHEBAG\n\n              this.afDB.database.ref(this.SignUpService.userPlace + '/drivers/' + this.userDriverUid + '/schedule/').once('value').then((snapSchedule)=>{\n                let obj = snapSchedule.val();\n                console.log(obj);\n                Object.getOwnPropertyNames(obj).forEach((key)=>{\n                  if(obj[key].type === 'origin'){\n                    this.afDB.database.ref(this.SignUpService.userPlace + '/reserves/'+ this.userDriverUid).push({\n                      driver: this.driverInfo,\n                      car:this.car,\n                      houseAddr: this.driver.houseAddress.name,\n                      placeAddr: this.driverInfo.placeAddr,\n                      price:this.precio,\n                      startHour: obj[key].hour,\n                      type: obj[key].type,\n              \n                  }).then((snap)=>{\n                    const key1 = snap.key;\n                    // this.MetricsService.createdReserves(this.SignUpService.userPlace,this.driverInfo,this.car,this.navParams.data.houseAddr[0],this.navParams.data.placeAddr,this.precio, sche.,this.typeOfReserve);\n            \n                   // set geofireOrkey \n                   this.geofireService.setGeofireOrNEWTEST(this.SignUpService.userPlace, key1, this.driver.houseAddress.coordinates.lat, this.driver.houseAddress.coordinates.lng );\n                   this.afDB.database.ref(this.SignUpService.userPlace + '/geofireOr/' + key1).update({\n                      driverId: this.driverInfo.userId\n                   })\n                   console.log('executed geofire Or');\n                  \n                      this.afDB.database.ref(this.SignUpService.userPlace + '/reserves/'+ this.userDriverUid + '/' + key1).update({\n                          keyTrip: key \n                      }) \n\n                      this.accepted = true;\n                      this.unsubscribe.next();\n                      this.unsubscribe.complete();\n                      this.viewCtrl.dismiss(this.accepted);\n\n                  })\n                  }else{\n                    this.afDB.database.ref(this.SignUpService.userPlace + '/reserves/'+ this.userDriverUid).push({\n                      driver: this.driverInfo,\n                      car:this.driver.trips.car,\n                      houseAddr: this.driver.houseAddress.name,\n                      placeAddr: this.driverInfo.placeAddr,\n                      price:this.precio,\n                      startHour: obj[key].hour,\n                      type: obj[key].type,\n              \n                  }).then((snap)=>{\n                    const key2 = snap.key;\n                    // this.MetricsService.createdReserves(this.SignUpService.userPlace,this.driverInfo,this.car,this.navParams.data.houseAddr[0],this.navParams.data.placeAddr,this.precio, sche.,this.typeOfReserve);\n            \n                   // set geofireOrkey \n                   this.geofireService.setGeofireDestNEWTEST(this.SignUpService.userPlace, key2, this.driver.houseAddress.coordinates.lat, this.driver.houseAddress.coordinates.lng );\n                   this.afDB.database.ref(this.SignUpService.userPlace + '/geofireDest/' + key2).update({\n                      driverId: this.driverInfo.userId\n                   })\n                   console.log('executed geofire Dest')\n                  \n              \n              \n                      this.afDB.database.ref(this.SignUpService.userPlace + '/reserves/'+ this.userDriverUid + '/' + key2).update({\n                          keyTrip: key \n                      }) \n                      this.accepted = true;\n                      this.unsubscribe.next();\n                      this.unsubscribe.complete();\n                      this.viewCtrl.dismiss(this.accepted);\n\n                  })                    \n                  }\n                  \n                })\n                \n              })\n           }\n\n     \n}; \n        \n  dismiss() {\n     // this.unsubscribe.next();\n    // this.unsubscribe.unsubscribe();\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  \n    this.viewCtrl.dismiss();\n\n  }  \n\n  // ionViewDidLeave(){\n  //   this.unsubscribe.next();\n  //   this.unsubscribe.complete();\n  // }\n \n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/confirmprice/confirmprice.ts"],"sourceRoot":""}