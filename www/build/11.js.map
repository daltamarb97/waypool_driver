{"version":3,"sources":["../../src/pages/support/support.module.ts","../../src/pages/support/support.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AACyC;AACO;AACR;AAaxC;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAX7B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,6DAAW;aACZ;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,6DAAW,CAAC;aACtC;YACD,OAAO,EAAE;gBACP,6DAAW;aACZ;SACF,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;AChBY;AACe;AACK;AACsB;AAChC;AACa;AAQjE;IAQI,qBAAmB,OAAsB,EAAQ,SAAoB,EAAS,eAA+B,EAAS,aAA4B,EAAS,qBAA4C,EAAQ,aAA2B;QAA1O,iBASD;QAToB,YAAO,GAAP,OAAO,CAAe;QAAQ,cAAS,GAAT,SAAS,CAAW;QAAS,oBAAe,GAAf,eAAe,CAAgB;QAAS,kBAAa,GAAb,aAAa,CAAe;QAAS,0BAAqB,GAArB,qBAAqB,CAAuB;QAAQ,kBAAa,GAAb,aAAa,CAAc;QAJ5O,YAAO,GAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC;QAClD,SAAI,GAAK,EAAE,CAAC;QAIV,IAAI,CAAC,eAAe,GAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC;QAC1D,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC;QAEpC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YACjE,KAAI,CAAC,IAAI,GAAE,IAAI,CAAC;YACd,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,IAAI,CAAC;QAC1B,CAAC,CAAC;IACJ,CAAC;IACC,+BAAS,GAAT;QAAA,iBA2BC;QA1BC,YAAY;QACd,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,UAAC,SAAkB;YACvD,EAAE,EAAC,SAAS,CAAC,CAAC,CAAC;gBACb,uCAAuC;gBAErC,KAAI,CAAC,KAAK,GAAG;oBACX,EAAE,EAAC,sBAAsB;oBACzB,EAAE,EAAE,KAAG,KAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAI,CAAC,IAAI,CAAC,UAAY;oBAC/C,OAAO,EAAE,KAAI,CAAC,eAAe;oBAC7B,IAAI,EAAE,KAAI,CAAC,UAAU;oBACrB,MAAM,EAAE,IAAI;iBACb,CAAC;gBAEF,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC;gBACtC,YAAY;gBACd,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,uBAAuB,CAAC,CAAC;gBAE1D,oCAAoC;gBAChC,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC;oBAClB,GAAG,EAAE,OAAO;iBAEb,CAAC;YACE,CAAC;YAAA,IAAI,EAAC;gBACJ,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC;YAC9C,CAAC;QACF,CAAC,CAAC;IACH,CAAC;IA7CQ,WAAW;QAJvB,wEAAS,CAAC;YACT,QAAQ,EAAE,cAAc;WACG;SAC5B,CAAC;oBAS4O;OARjO,WAAW,CAiDvB;IAAD,CAAC;AAAA;SAjDY,WAAW,e","file":"11.js","sourcesContent":["\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { SupportPage } from './support';\n \n@NgModule({\n  declarations: [\n    SupportPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(SupportPage),\n  ],\n  exports: [\n    SupportPage\n  ]\n})\nexport class SupportPageModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/support/support.module.ts","import { Component } from '@angular/core';\nimport { NavController, NavParams, IonicPage } from 'ionic-angular';\nimport { SignUpService } from '../../services/signup.service';\nimport { authenticationService } from '../../services/driverauthentication.service';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { EmailComposer } from '@ionic-native/email-composer/ngx';\n\n@IonicPage()\n\n@Component({\n  selector: 'page-support',\n  templateUrl: 'support.html' \n})\nexport class SupportPage {\n  typeOfSituation:string;\n  info:string;\n  today:any;\n  userUid=this.AngularFireAuth.auth.currentUser.uid;\n  user:any={};\nemail:any;\nexperience:string;\n    constructor(public navCtrl: NavController,public navParams: NavParams, public AngularFireAuth:AngularFireAuth,private emailComposer: EmailComposer,private authenticationService: authenticationService,public SignupService:SignUpService) {\n    this.typeOfSituation=this.navParams.get('typeOfSituation')\n    this.info=this.navParams.get('info')\n\n    this.today = Date.now();\n    this.SignupService.getMyInfoForProfile(this.userUid).subscribe(user=>{\n      this.user= user;\n        console.log(this.user)\n    })\n  }\n    sendEmail() {\n      //send email\n    this.emailComposer.isAvailable().then((available: boolean) =>{\n      if(available) {\n        //if its available we can send the mail\n        \n          this.email = {\n            to:'waypooltec@gmail.com',\n            cc: `${this.user.email}${this.user.fixedemail}`,      \n            subject: this.typeOfSituation,\n            body: this.experience,\n            isHtml: true\n          };\n       \n          this.emailComposer.open(this.email);\n        // add alias\n      this.email.addAlias('gmail', 'com.google.android.gm');\n  \n  // then use alias when sending email\n      this.email.open({\n    app: 'gmail'\n    \n  })\n      }else{\n        console.log('hay un problema con el correo')\n      }\n     })\n    }\n\n  \n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/support/support.ts"],"sourceRoot":""}